@model UserViewModel

<div class="card shadow rounded-4">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0">Thông tin người dùng</h5>
    </div>
    <div class="card-body">
        <form id="editUserForm">
            @Html.HiddenFor(m => m.Id)

            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Tên tài khoản</label>
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @readonly = "readonly", id = "UserName" })
                </div>
                <div class="col-md-6">
                    <label class="form-label">Họ tên</label>
                    @Html.TextBoxFor(m => m.Fullname, new { @class = "form-control", @readonly = "readonly", id = "Fullname" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Email</label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly", id = "Email" })
                </div>
                <div class="col-md-6">
                    <label class="form-label">Địa chỉ</label>
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @readonly = "readonly", id = "Address" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Trạng thái</label>
                    @Html.DropDownListFor(m => m.IsActive, new SelectList(new[] {
                    new { Text = "Đang hoạt động", Value = "true" },
                    new { Text = "Vô hiệu hóa", Value = "false" }
                    }, "Value", "Text", Model.IsActive.ToString().ToLower()), "Chọn trạng thái", new { @class = "form-control", @disabled = "disabled", id = "IsActiveDropdown" })
                </div>
                <div class="col-md-6">
                    <label class="form-label">Vai trò</label>
                    <input type="text" class="form-control" id="DisplayRole" value="@string.Join(", ", Model.DisplayRole)" readonly />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Ngày tạo</label>
                    <input type="text" class="form-control" value="@(Model.CreatedDate.HasValue ? Model.CreatedDate.Value.ToString("dd/MM/yyyy") : "Chưa cập nhật")" readonly />
                </div>
                <div class="col-md-6">
                    <label class="form-label d-block">Ảnh đại diện</label>
                    @if (!string.IsNullOrEmpty(Model.Avatar))
                    {
                        <img src="@Url.Content(Model.Avatar)" alt="Avatar" class="img-thumbnail rounded" width="100" />
                    }
                    else
                    {
                        <span class="text-muted">Chưa có ảnh</span>
                    }
                </div>
            </div>

            <div class="text-end">
                <button type="button" id="editBtn" class="btn btn-warning me-2" onclick="enableEdit()">Sửa</button>
                <button type="button" id="saveBtn" class="btn btn-primary d-none" onclick="submitEditForm()">Lưu</button>
            </div>
        </form>
    </div>
</div>

<script>
    console.log($("#IsActiveDropdown").val());
    function enableEdit() {
        $("#editUserForm input").removeAttr("readonly");
        $("#editUserForm select").removeAttr("disabled");

        $("#editBtn").addClass("d-none");
        $("#saveBtn").removeClass("d-none");
    }

    function submitEditForm() {
        const id = $("#Id").val();

        var model = {
            id: id,
            userName: $("#UserName").val(),
            email: $("#Email").val(),
            fullname: $("#Fullname").val(),
            address: $("#Address").val(),
            avatar: "",
            isActive: $("#IsActiveDropdown").val() === "true"
        };

        $.ajax({
            url: `/Admins/Account/Edit/${id}`,
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(model),
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: 'Cập nhật thông tin người dùng thành công.',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: response.message || 'Có lỗi xảy ra khi cập nhật.'
                    });
                }
            },
            error: function (xhr) {
                console.error(xhr);
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi hệ thống!',
                    text: `Mã lỗi: ${xhr.status} - ${xhr.statusText}`
                });
            }
        });
    }
</script>

